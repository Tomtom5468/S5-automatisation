name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  XDEBUG_MODE: coverage

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: php-actions/composer@v6

      - name: PHPUnit Tests
        uses: php-actions/phpunit@v3
        with:
          version: 9.6.11
          php_extensions: gd sqlite3 dom json libxml mbstring tokenizer xdebug xml xmlwriter zip
          configuration: phpunit.xml

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: log/coverage-cobertura.xml
          format: markdown
          badge: true
          output: both

      - name: exporting coverage
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY

      - name: Running PHPCS
        uses: php-actions/phpcs@v1
        if: always()
        with:
          standard: PSR12
          ignore: vendor
          path: lib
          extensions: php
          args: --runtime-set ignore_errors_on_exit 1 --runtime-set ignore_warnings_on_exit 1

      - name: Running PHPMD
        uses: php-actions/phpmd@v1
        if: always()
        with:
          path: lib/
          output: text
          ruleset: cleancode,codesize,controversial,design,naming,unusedcode
          args: --ignore-violations-on-exit

      - name: Running PHPStan
        uses: php-actions/phpstan@v3
        if: always()
        continue-on-error: true
        with:
          path: lib
          level: 0

      - name: Check for data directory
        run: if [ -d "data" ]; then ls -al data; else echo "No data directory found"; fi

      - name: Deploying new version
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.ip }}
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          server-dir: /www/
          exclude: |
                  **/.git*
